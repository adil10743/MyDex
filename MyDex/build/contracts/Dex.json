{
  "contractName": "Dex",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.buysell",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "OrderBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "Id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "Trader",
          "type": "address"
        },
        {
          "internalType": "enum Dex.buysell",
          "name": "OrderSide",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "Ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "Amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenMapping",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.buysell",
          "name": "orderSide",
          "type": "uint8"
        }
      ],
      "name": "getOrderBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "Id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "Trader",
              "type": "address"
            },
            {
              "internalType": "enum Dex.buysell",
              "name": "OrderSide",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "Ticker",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "Amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dex.order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum Dex.buysell",
          "name": "orderSide",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.buysell\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OrderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.buysell\",\"name\":\"OrderSide\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"Ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Dex.buysell\",\"name\":\"orderSide\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.buysell\",\"name\":\"orderSide\",\"type\":\"uint8\"}],\"name\":\"getOrderBook\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"Trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.buysell\",\"name\":\"OrderSide\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"Ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"internalType\":\"struct Dex.order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Dex.sol\":{\"keccak256\":\"0xe35787903903858b2039f575ab6a124d6d4938eb6c0ba748f84745aa075bdfaa\",\"urls\":[\"bzz-raw://81d8164e4a3ab21cde2569385008c21e21b0404293fc191265386f0c2faef292\",\"dweb:/ipfs/QmZdpaSyFRn4PhWzqu2frae8k6q3XmvT3mrPoehyAY8YLn\"]},\"/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Wallet.sol\":{\"keccak256\":\"0x2d6b5e89afeed467ce5e584f9a799069bca905a49ca19adb4cf22bf4227b1090\",\"urls\":[\"bzz-raw://a87c649769293aba79996fa6faee106d8b628e9666a8fb1697aad7278bf93674\",\"dweb:/ipfs/QmUvNg1gxbDjvCz2P9Hr4YiwrP2YxceX4kTbMJgrshmrHq\"]},\"/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611540806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639776aacf116100665780639776aacf1461015e5780639ead72221461017a578063a8d2021a146101aa578063ba58ea68146101c6578063c9630cb0146101f657610093565b80631f14df6914610098578063667cb4ba146100c85780636f3b62f9146100f95780639233a49714610129575b600080fd5b6100b260048036038101906100ad9190610c0b565b610212565b6040516100bf9190610c64565b60405180910390f35b6100e260048036038101906100dd9190610c7f565b610237565b6040516100f0929190610cdc565b60405180910390f35b610113600480360381019061010e9190610d56565b61027b565b6040516101209190610dd8565b60405180910390f35b610143600480360381019061013e9190610df3565b61037b565b60405161015596959493929190610ecc565b60405180910390f35b61017860048036038101906101739190610f59565b61040e565b005b610194600480360381019061018f9190610f99565b6104cc565b6040516101a19190610fc6565b60405180910390f35b6101c460048036038101906101bf9190610fe1565b6104f0565b005b6101e060048036038101906101db9190611021565b6107a8565b6040516101ed91906111c7565b60405180910390f35b610210600480360381019061020b9190610fe1565b610909565b005b6002602052816000526040600020602052806000526040600020600091509150505481565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008060018111156102905761028f610e55565b5b8560018111156102a3576102a2610e55565b5b141561036f576102bc8284610b3090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036590611246565b60405180910390fd5b5b60019050949350505050565b600360205282600052604060002060205281600052604060002081815481106103a357600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff168152506000808481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600181815481106104dc57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d906112b2565b60405180910390fd5b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610629576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106209061131e565b60405180910390fd5b61068c83600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610b4690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555060008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161075092919061133e565b602060405180830381600087803b15801561076a57600080fd5b505af115801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190611393565b50505050565b60606003600084815260200190815260200160002060008360018111156107d2576107d1610e55565b5b60018111156107e4576107e3610e55565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108fd57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660018111156108ba576108b9610e55565b5b60018111156108cc576108cb610e55565b5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610812565b50505050905092915050565b80600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a6906112b2565b60405180910390fd5b610a1283600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610b5c90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555060008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610ad8939291906113c0565b602060405180830381600087803b158015610af257600080fd5b505af1158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611393565b50505050565b60008183610b3e9190611426565b905092915050565b60008183610b549190611480565b905092915050565b60008183610b6a91906114b4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ba282610b77565b9050919050565b610bb281610b97565b8114610bbd57600080fd5b50565b600081359050610bcf81610ba9565b92915050565b6000819050919050565b610be881610bd5565b8114610bf357600080fd5b50565b600081359050610c0581610bdf565b92915050565b60008060408385031215610c2257610c21610b72565b5b6000610c3085828601610bc0565b9250506020610c4185828601610bf6565b9150509250929050565b6000819050919050565b610c5e81610c4b565b82525050565b6000602082019050610c796000830184610c55565b92915050565b600060208284031215610c9557610c94610b72565b5b6000610ca384828501610bf6565b91505092915050565b610cb581610bd5565b82525050565b6000610cc682610b77565b9050919050565b610cd681610cbb565b82525050565b6000604082019050610cf16000830185610cac565b610cfe6020830184610ccd565b9392505050565b60028110610d1257600080fd5b50565b600081359050610d2481610d05565b92915050565b610d3381610c4b565b8114610d3e57600080fd5b50565b600081359050610d5081610d2a565b92915050565b60008060008060808587031215610d7057610d6f610b72565b5b6000610d7e87828801610d15565b9450506020610d8f87828801610bf6565b9350506040610da087828801610d41565b9250506060610db187828801610d41565b91505092959194509250565b60008115159050919050565b610dd281610dbd565b82525050565b6000602082019050610ded6000830184610dc9565b92915050565b600080600060608486031215610e0c57610e0b610b72565b5b6000610e1a86828701610bf6565b9350506020610e2b86828701610d15565b9250506040610e3c86828701610d41565b9150509250925092565b610e4f81610b97565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610e9557610e94610e55565b5b50565b6000819050610ea682610e84565b919050565b6000610eb682610e98565b9050919050565b610ec681610eab565b82525050565b600060c082019050610ee16000830189610c55565b610eee6020830188610e46565b610efb6040830187610ebd565b610f086060830186610cac565b610f156080830185610c55565b610f2260a0830184610c55565b979650505050505050565b610f3681610cbb565b8114610f4157600080fd5b50565b600081359050610f5381610f2d565b92915050565b60008060408385031215610f7057610f6f610b72565b5b6000610f7e85828601610bf6565b9250506020610f8f85828601610f44565b9150509250929050565b600060208284031215610faf57610fae610b72565b5b6000610fbd84828501610d41565b91505092915050565b6000602082019050610fdb6000830184610cac565b92915050565b60008060408385031215610ff857610ff7610b72565b5b600061100685828601610d41565b925050602061101785828601610bf6565b9150509250929050565b6000806040838503121561103857611037610b72565b5b600061104685828601610bf6565b925050602061105785828601610d15565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109681610c4b565b82525050565b6110a581610b97565b82525050565b6110b481610eab565b82525050565b6110c381610bd5565b82525050565b60c0820160008201516110df600085018261108d565b5060208201516110f2602085018261109c565b50604082015161110560408501826110ab565b50606082015161111860608501826110ba565b50608082015161112b608085018261108d565b5060a082015161113e60a085018261108d565b50505050565b600061115083836110c9565b60c08301905092915050565b6000602082019050919050565b600061117482611061565b61117e818561106c565b93506111898361107d565b8060005b838110156111ba5781516111a18882611144565b97506111ac8361115c565b92505060018101905061118d565b5085935050505092915050565b600060208201905081810360008301526111e18184611169565b905092915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006112306014836111e9565b915061123b826111fa565b602082019050919050565b6000602082019050818103600083015261125f81611223565b9050919050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b600061129c6014836111e9565b91506112a782611266565b602082019050919050565b600060208201905081810360008301526112cb8161128f565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006113086012836111e9565b9150611313826112d2565b602082019050919050565b60006020820190508181036000830152611337816112fb565b9050919050565b60006040820190506113536000830185610e46565b6113606020830184610c55565b9392505050565b61137081610dbd565b811461137b57600080fd5b50565b60008151905061138d81611367565b92915050565b6000602082840312156113a9576113a8610b72565b5b60006113b78482850161137e565b91505092915050565b60006060820190506113d56000830186610e46565b6113e26020830185610e46565b6113ef6040830184610c55565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061143182610c4b565b915061143c83610c4b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611475576114746113f7565b5b828202905092915050565b600061148b82610c4b565b915061149683610c4b565b9250828210156114a9576114a86113f7565b5b828203905092915050565b60006114bf82610c4b565b91506114ca83610c4b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114ff576114fe6113f7565b5b82820190509291505056fea2646970667358221220043d3c7da08f34d77d215196c6896c90c6df77aa5287c4a4c3aa671f331f3f1364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80639776aacf116100665780639776aacf1461015e5780639ead72221461017a578063a8d2021a146101aa578063ba58ea68146101c6578063c9630cb0146101f657610093565b80631f14df6914610098578063667cb4ba146100c85780636f3b62f9146100f95780639233a49714610129575b600080fd5b6100b260048036038101906100ad9190610c0b565b610212565b6040516100bf9190610c64565b60405180910390f35b6100e260048036038101906100dd9190610c7f565b610237565b6040516100f0929190610cdc565b60405180910390f35b610113600480360381019061010e9190610d56565b61027b565b6040516101209190610dd8565b60405180910390f35b610143600480360381019061013e9190610df3565b61037b565b60405161015596959493929190610ecc565b60405180910390f35b61017860048036038101906101739190610f59565b61040e565b005b610194600480360381019061018f9190610f99565b6104cc565b6040516101a19190610fc6565b60405180910390f35b6101c460048036038101906101bf9190610fe1565b6104f0565b005b6101e060048036038101906101db9190611021565b6107a8565b6040516101ed91906111c7565b60405180910390f35b610210600480360381019061020b9190610fe1565b610909565b005b6002602052816000526040600020602052806000526040600020600091509150505481565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60008060018111156102905761028f610e55565b5b8560018111156102a3576102a2610e55565b5b141561036f576102bc8284610b3090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561036e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036590611246565b60405180910390fd5b5b60019050949350505050565b600360205282600052604060002060205281600052604060002081815481106103a357600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff168152506000808481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600181815481106104dc57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d906112b2565b60405180910390fd5b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610629576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106209061131e565b60405180910390fd5b61068c83600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610b4690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555060008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161075092919061133e565b602060405180830381600087803b15801561076a57600080fd5b505af115801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190611393565b50505050565b60606003600084815260200190815260200160002060008360018111156107d2576107d1610e55565b5b60018111156107e4576107e3610e55565b5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108fd57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660018111156108ba576108b9610e55565b5b60018111156108cc576108cb610e55565b5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610812565b50505050905092915050565b80600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a6906112b2565b60405180910390fd5b610a1283600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610b5c90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208190555060008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610ad8939291906113c0565b602060405180830381600087803b158015610af257600080fd5b505af1158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611393565b50505050565b60008183610b3e9190611426565b905092915050565b60008183610b549190611480565b905092915050565b60008183610b6a91906114b4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ba282610b77565b9050919050565b610bb281610b97565b8114610bbd57600080fd5b50565b600081359050610bcf81610ba9565b92915050565b6000819050919050565b610be881610bd5565b8114610bf357600080fd5b50565b600081359050610c0581610bdf565b92915050565b60008060408385031215610c2257610c21610b72565b5b6000610c3085828601610bc0565b9250506020610c4185828601610bf6565b9150509250929050565b6000819050919050565b610c5e81610c4b565b82525050565b6000602082019050610c796000830184610c55565b92915050565b600060208284031215610c9557610c94610b72565b5b6000610ca384828501610bf6565b91505092915050565b610cb581610bd5565b82525050565b6000610cc682610b77565b9050919050565b610cd681610cbb565b82525050565b6000604082019050610cf16000830185610cac565b610cfe6020830184610ccd565b9392505050565b60028110610d1257600080fd5b50565b600081359050610d2481610d05565b92915050565b610d3381610c4b565b8114610d3e57600080fd5b50565b600081359050610d5081610d2a565b92915050565b60008060008060808587031215610d7057610d6f610b72565b5b6000610d7e87828801610d15565b9450506020610d8f87828801610bf6565b9350506040610da087828801610d41565b9250506060610db187828801610d41565b91505092959194509250565b60008115159050919050565b610dd281610dbd565b82525050565b6000602082019050610ded6000830184610dc9565b92915050565b600080600060608486031215610e0c57610e0b610b72565b5b6000610e1a86828701610bf6565b9350506020610e2b86828701610d15565b9250506040610e3c86828701610d41565b9150509250925092565b610e4f81610b97565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610e9557610e94610e55565b5b50565b6000819050610ea682610e84565b919050565b6000610eb682610e98565b9050919050565b610ec681610eab565b82525050565b600060c082019050610ee16000830189610c55565b610eee6020830188610e46565b610efb6040830187610ebd565b610f086060830186610cac565b610f156080830185610c55565b610f2260a0830184610c55565b979650505050505050565b610f3681610cbb565b8114610f4157600080fd5b50565b600081359050610f5381610f2d565b92915050565b60008060408385031215610f7057610f6f610b72565b5b6000610f7e85828601610bf6565b9250506020610f8f85828601610f44565b9150509250929050565b600060208284031215610faf57610fae610b72565b5b6000610fbd84828501610d41565b91505092915050565b6000602082019050610fdb6000830184610cac565b92915050565b60008060408385031215610ff857610ff7610b72565b5b600061100685828601610d41565b925050602061101785828601610bf6565b9150509250929050565b6000806040838503121561103857611037610b72565b5b600061104685828601610bf6565b925050602061105785828601610d15565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109681610c4b565b82525050565b6110a581610b97565b82525050565b6110b481610eab565b82525050565b6110c381610bd5565b82525050565b60c0820160008201516110df600085018261108d565b5060208201516110f2602085018261109c565b50604082015161110560408501826110ab565b50606082015161111860608501826110ba565b50608082015161112b608085018261108d565b5060a082015161113e60a085018261108d565b50505050565b600061115083836110c9565b60c08301905092915050565b6000602082019050919050565b600061117482611061565b61117e818561106c565b93506111898361107d565b8060005b838110156111ba5781516111a18882611144565b97506111ac8361115c565b92505060018101905061118d565b5085935050505092915050565b600060208201905081810360008301526111e18184611169565b905092915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006112306014836111e9565b915061123b826111fa565b602082019050919050565b6000602082019050818103600083015261125f81611223565b9050919050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b600061129c6014836111e9565b91506112a782611266565b602082019050919050565b600060208201905081810360008301526112cb8161128f565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b60006113086012836111e9565b9150611313826112d2565b602082019050919050565b60006020820190508181036000830152611337816112fb565b9050919050565b60006040820190506113536000830185610e46565b6113606020830184610c55565b9392505050565b61137081610dbd565b811461137b57600080fd5b50565b60008151905061138d81611367565b92915050565b6000602082840312156113a9576113a8610b72565b5b60006113b78482850161137e565b91505092915050565b60006060820190506113d56000830186610e46565b6113e26020830185610e46565b6113ef6040830184610c55565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061143182610c4b565b915061143c83610c4b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611475576114746113f7565b5b828202905092915050565b600061148b82610c4b565b915061149683610c4b565b9250828210156114a9576114a86113f7565b5b828203905092915050565b60006114bf82610c4b565b91506114ca83610c4b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114ff576114fe6113f7565b5b82820190509291505056fea2646970667358221220043d3c7da08f34d77d215196c6896c90c6df77aa5287c4a4c3aa671f331f3f1364736f6c63430008090033",
  "immutableReferences": {},
  "sourceMap": "83:783:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "83:783:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;549:63:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;578:286:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;356:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;619:171:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;366:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1066:324;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;428:144:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;796:264:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;549:63;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;315:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;578:286:0:-;679:12;719:11;706:24;;;;;;;;:::i;:::-;;:9;:24;;;;;;;;:::i;:::-;;;702:135;;;784:17;795:5;784:6;:10;;:17;;;;:::i;:::-;753:8;:20;762:10;753:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:48;;745:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;702:135;853:4;846:11;;578:286;;;;;;:::o;356:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;619:171:3:-;725:26;;;;;;;;731:6;725:26;;;;738:12;725:26;;;;;702:12;:20;715:6;702:20;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:9;776:6;761:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;619:171;;:::o;366:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1066:324::-;1127:6;498:1;453:47;;:12;:20;466:6;453:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;445:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1194:6:::1;1162:8;:20;1171:10;1162:20;;;;;;;;;;;;;;;:28;1183:6;1162:28;;;;;;;;;;;;:38;;1154:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1264:40;1297:6;1264:8;:20;1273:10;1264:20;;;;;;;;;;;;;;;:28;1285:6;1264:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1233:8;:20;1242:10;1233:20;;;;;;;;;;;;;;;:28;1254:6;1233:28;;;;;;;;;;;:71;;;;1321:12;:20:::0;1334:6:::1;1321:20;;;;;;;;;;;:33;;;;;;;;;;;;1314:50;;;1365:10;1376:6;1314:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1066:324:::0;;;:::o;428:144:0:-;505:14;537:9;:17;547:6;537:17;;;;;;;;;;;:28;555:9;537:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;530:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:144;;;;:::o;796:264:3:-;856:6;498:1;453:47;;:12;:20;466:6;453:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;445:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;914:40:::1;947:6;914:8;:20;923:10;914:20;;;;;;;;;;;;;;;:28;935:6;914:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;883:8;:20;892:10;883:20;;;;;;;;;;;;;;;:28;904:6;883:28;;;;;;;;;;;:71;;;;971:12;:20:::0;984:6:::1;971:20;;;;;;;;;;;:33;;;;;;;;;;;;964:54;;;1019:10;1039:4;1046:6;964:89;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;796:264:::0;;;:::o;3382:96:8:-;3440:7;3470:1;3466;:5;;;;:::i;:::-;3459:12;;3382:96;;;;:::o;3039:::-;3097:7;3127:1;3123;:5;;;;:::i;:::-;3116:12;;3039:96;;;;:::o;2672:::-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:77::-;1714:7;1743:5;1732:16;;1677:77;;;:::o;1760:118::-;1847:24;1865:5;1847:24;:::i;:::-;1842:3;1835:37;1760:118;;:::o;1884:222::-;1977:4;2015:2;2004:9;2000:18;1992:26;;2028:71;2096:1;2085:9;2081:17;2072:6;2028:71;:::i;:::-;1884:222;;;;:::o;2112:329::-;2171:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:119;;;2226:79;;:::i;:::-;2188:119;2346:1;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2317:117;2112:329;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:104::-;2616:7;2645:24;2663:5;2645:24;:::i;:::-;2634:35;;2571:104;;;:::o;2681:142::-;2784:32;2810:5;2784:32;:::i;:::-;2779:3;2772:45;2681:142;;:::o;2829:364::-;2966:4;3004:2;2993:9;2989:18;2981:26;;3017:71;3085:1;3074:9;3070:17;3061:6;3017:71;:::i;:::-;3098:88;3182:2;3171:9;3167:18;3158:6;3098:88;:::i;:::-;2829:364;;;;;:::o;3199:109::-;3282:1;3275:5;3272:12;3262:40;;3298:1;3295;3288:12;3262:40;3199:109;:::o;3314:159::-;3370:5;3408:6;3395:20;3386:29;;3424:43;3461:5;3424:43;:::i;:::-;3314:159;;;;:::o;3479:122::-;3552:24;3570:5;3552:24;:::i;:::-;3545:5;3542:35;3532:63;;3591:1;3588;3581:12;3532:63;3479:122;:::o;3607:139::-;3653:5;3691:6;3678:20;3669:29;;3707:33;3734:5;3707:33;:::i;:::-;3607:139;;;;:::o;3752:785::-;3848:6;3856;3864;3872;3921:3;3909:9;3900:7;3896:23;3892:33;3889:120;;;3928:79;;:::i;:::-;3889:120;4048:1;4073:63;4128:7;4119:6;4108:9;4104:22;4073:63;:::i;:::-;4063:73;;4019:127;4185:2;4211:53;4256:7;4247:6;4236:9;4232:22;4211:53;:::i;:::-;4201:63;;4156:118;4313:2;4339:53;4384:7;4375:6;4364:9;4360:22;4339:53;:::i;:::-;4329:63;;4284:118;4441:2;4467:53;4512:7;4503:6;4492:9;4488:22;4467:53;:::i;:::-;4457:63;;4412:118;3752:785;;;;;;;:::o;4543:90::-;4577:7;4620:5;4613:13;4606:21;4595:32;;4543:90;;;:::o;4639:109::-;4720:21;4735:5;4720:21;:::i;:::-;4715:3;4708:34;4639:109;;:::o;4754:210::-;4841:4;4879:2;4868:9;4864:18;4856:26;;4892:65;4954:1;4943:9;4939:17;4930:6;4892:65;:::i;:::-;4754:210;;;;:::o;4970:639::-;5057:6;5065;5073;5122:2;5110:9;5101:7;5097:23;5093:32;5090:119;;;5128:79;;:::i;:::-;5090:119;5248:1;5273:53;5318:7;5309:6;5298:9;5294:22;5273:53;:::i;:::-;5263:63;;5219:117;5375:2;5401:63;5456:7;5447:6;5436:9;5432:22;5401:63;:::i;:::-;5391:73;;5346:128;5513:2;5539:53;5584:7;5575:6;5564:9;5560:22;5539:53;:::i;:::-;5529:63;;5484:118;4970:639;;;;;:::o;5615:118::-;5702:24;5720:5;5702:24;:::i;:::-;5697:3;5690:37;5615:118;;:::o;5739:180::-;5787:77;5784:1;5777:88;5884:4;5881:1;5874:15;5908:4;5905:1;5898:15;5925:115;6008:1;6001:5;5998:12;5988:46;;6014:18;;:::i;:::-;5988:46;5925:115;:::o;6046:131::-;6093:7;6122:5;6111:16;;6128:43;6165:5;6128:43;:::i;:::-;6046:131;;;:::o;6183:::-;6241:9;6274:34;6302:5;6274:34;:::i;:::-;6261:47;;6183:131;;;:::o;6320:147::-;6415:45;6454:5;6415:45;:::i;:::-;6410:3;6403:58;6320:147;;:::o;6473:791::-;6714:4;6752:3;6741:9;6737:19;6729:27;;6766:71;6834:1;6823:9;6819:17;6810:6;6766:71;:::i;:::-;6847:72;6915:2;6904:9;6900:18;6891:6;6847:72;:::i;:::-;6929:80;7005:2;6994:9;6990:18;6981:6;6929:80;:::i;:::-;7019:72;7087:2;7076:9;7072:18;7063:6;7019:72;:::i;:::-;7101:73;7169:3;7158:9;7154:19;7145:6;7101:73;:::i;:::-;7184;7252:3;7241:9;7237:19;7228:6;7184:73;:::i;:::-;6473:791;;;;;;;;;:::o;7270:138::-;7351:32;7377:5;7351:32;:::i;:::-;7344:5;7341:43;7331:71;;7398:1;7395;7388:12;7331:71;7270:138;:::o;7414:155::-;7468:5;7506:6;7493:20;7484:29;;7522:41;7557:5;7522:41;:::i;:::-;7414:155;;;;:::o;7575:490::-;7651:6;7659;7708:2;7696:9;7687:7;7683:23;7679:32;7676:119;;;7714:79;;:::i;:::-;7676:119;7834:1;7859:53;7904:7;7895:6;7884:9;7880:22;7859:53;:::i;:::-;7849:63;;7805:117;7961:2;7987:61;8040:7;8031:6;8020:9;8016:22;7987:61;:::i;:::-;7977:71;;7932:126;7575:490;;;;;:::o;8071:329::-;8130:6;8179:2;8167:9;8158:7;8154:23;8150:32;8147:119;;;8185:79;;:::i;:::-;8147:119;8305:1;8330:53;8375:7;8366:6;8355:9;8351:22;8330:53;:::i;:::-;8320:63;;8276:117;8071:329;;;;:::o;8406:222::-;8499:4;8537:2;8526:9;8522:18;8514:26;;8550:71;8618:1;8607:9;8603:17;8594:6;8550:71;:::i;:::-;8406:222;;;;:::o;8634:474::-;8702:6;8710;8759:2;8747:9;8738:7;8734:23;8730:32;8727:119;;;8765:79;;:::i;:::-;8727:119;8885:1;8910:53;8955:7;8946:6;8935:9;8931:22;8910:53;:::i;:::-;8900:63;;8856:117;9012:2;9038:53;9083:7;9074:6;9063:9;9059:22;9038:53;:::i;:::-;9028:63;;8983:118;8634:474;;;;;:::o;9114:494::-;9192:6;9200;9249:2;9237:9;9228:7;9224:23;9220:32;9217:119;;;9255:79;;:::i;:::-;9217:119;9375:1;9400:53;9445:7;9436:6;9425:9;9421:22;9400:53;:::i;:::-;9390:63;;9346:117;9502:2;9528:63;9583:7;9574:6;9563:9;9559:22;9528:63;:::i;:::-;9518:73;;9473:128;9114:494;;;;;:::o;9614:135::-;9702:6;9736:5;9730:12;9720:22;;9614:135;;;:::o;9755:205::-;9875:11;9909:6;9904:3;9897:19;9949:4;9944:3;9940:14;9925:29;;9755:205;;;;:::o;9966:153::-;10054:4;10077:3;10069:11;;10107:4;10102:3;10098:14;10090:22;;9966:153;;;:::o;10125:108::-;10202:24;10220:5;10202:24;:::i;:::-;10197:3;10190:37;10125:108;;:::o;10239:::-;10316:24;10334:5;10316:24;:::i;:::-;10311:3;10304:37;10239:108;;:::o;10353:137::-;10438:45;10477:5;10438:45;:::i;:::-;10433:3;10426:58;10353:137;;:::o;10496:108::-;10573:24;10591:5;10573:24;:::i;:::-;10568:3;10561:37;10496:108;;:::o;10654:1203::-;10783:4;10778:3;10774:14;10868:4;10861:5;10857:16;10851:23;10887:63;10944:4;10939:3;10935:14;10921:12;10887:63;:::i;:::-;10798:162;11044:4;11037:5;11033:16;11027:23;11063:63;11120:4;11115:3;11111:14;11097:12;11063:63;:::i;:::-;10970:166;11223:4;11216:5;11212:16;11206:23;11242:71;11307:4;11302:3;11298:14;11284:12;11242:71;:::i;:::-;11146:177;11407:4;11400:5;11396:16;11390:23;11426:63;11483:4;11478:3;11474:14;11460:12;11426:63;:::i;:::-;11333:166;11583:4;11576:5;11572:16;11566:23;11602:63;11659:4;11654:3;11650:14;11636:12;11602:63;:::i;:::-;11509:166;11758:4;11751:5;11747:16;11741:23;11777:63;11834:4;11829:3;11825:14;11811:12;11777:63;:::i;:::-;11685:165;10752:1105;10654:1203;;:::o;11863:263::-;11974:10;11995:88;12079:3;12071:6;11995:88;:::i;:::-;12115:4;12110:3;12106:14;12092:28;;11863:263;;;;:::o;12132:134::-;12223:4;12255;12250:3;12246:14;12238:22;;12132:134;;;:::o;12320:900::-;12481:3;12510:75;12579:5;12510:75;:::i;:::-;12601:107;12701:6;12696:3;12601:107;:::i;:::-;12594:114;;12732:77;12803:5;12732:77;:::i;:::-;12832:7;12863:1;12848:347;12873:6;12870:1;12867:13;12848:347;;;12949:6;12943:13;12976:105;13077:3;13062:13;12976:105;:::i;:::-;12969:112;;13104:81;13178:6;13104:81;:::i;:::-;13094:91;;12908:287;12895:1;12892;12888:9;12883:14;;12848:347;;;12852:14;13211:3;13204:10;;12486:734;;;12320:900;;;;:::o;13226:457::-;13411:4;13449:2;13438:9;13434:18;13426:26;;13498:9;13492:4;13488:20;13484:1;13473:9;13469:17;13462:47;13526:150;13671:4;13662:6;13526:150;:::i;:::-;13518:158;;13226:457;;;;:::o;13689:169::-;13773:11;13807:6;13802:3;13795:19;13847:4;13842:3;13838:14;13823:29;;13689:169;;;;:::o;13864:170::-;14004:22;14000:1;13992:6;13988:14;13981:46;13864:170;:::o;14040:366::-;14182:3;14203:67;14267:2;14262:3;14203:67;:::i;:::-;14196:74;;14279:93;14368:3;14279:93;:::i;:::-;14397:2;14392:3;14388:12;14381:19;;14040:366;;;:::o;14412:419::-;14578:4;14616:2;14605:9;14601:18;14593:26;;14665:9;14659:4;14655:20;14651:1;14640:9;14636:17;14629:47;14693:131;14819:4;14693:131;:::i;:::-;14685:139;;14412:419;;;:::o;14837:170::-;14977:22;14973:1;14965:6;14961:14;14954:46;14837:170;:::o;15013:366::-;15155:3;15176:67;15240:2;15235:3;15176:67;:::i;:::-;15169:74;;15252:93;15341:3;15252:93;:::i;:::-;15370:2;15365:3;15361:12;15354:19;;15013:366;;;:::o;15385:419::-;15551:4;15589:2;15578:9;15574:18;15566:26;;15638:9;15632:4;15628:20;15624:1;15613:9;15609:17;15602:47;15666:131;15792:4;15666:131;:::i;:::-;15658:139;;15385:419;;;:::o;15810:168::-;15950:20;15946:1;15938:6;15934:14;15927:44;15810:168;:::o;15984:366::-;16126:3;16147:67;16211:2;16206:3;16147:67;:::i;:::-;16140:74;;16223:93;16312:3;16223:93;:::i;:::-;16341:2;16336:3;16332:12;16325:19;;15984:366;;;:::o;16356:419::-;16522:4;16560:2;16549:9;16545:18;16537:26;;16609:9;16603:4;16599:20;16595:1;16584:9;16580:17;16573:47;16637:131;16763:4;16637:131;:::i;:::-;16629:139;;16356:419;;;:::o;16781:332::-;16902:4;16940:2;16929:9;16925:18;16917:26;;16953:71;17021:1;17010:9;17006:17;16997:6;16953:71;:::i;:::-;17034:72;17102:2;17091:9;17087:18;17078:6;17034:72;:::i;:::-;16781:332;;;;;:::o;17119:116::-;17189:21;17204:5;17189:21;:::i;:::-;17182:5;17179:32;17169:60;;17225:1;17222;17215:12;17169:60;17119:116;:::o;17241:137::-;17295:5;17326:6;17320:13;17311:22;;17342:30;17366:5;17342:30;:::i;:::-;17241:137;;;;:::o;17384:345::-;17451:6;17500:2;17488:9;17479:7;17475:23;17471:32;17468:119;;;17506:79;;:::i;:::-;17468:119;17626:1;17651:61;17704:7;17695:6;17684:9;17680:22;17651:61;:::i;:::-;17641:71;;17597:125;17384:345;;;;:::o;17735:442::-;17884:4;17922:2;17911:9;17907:18;17899:26;;17935:71;18003:1;17992:9;17988:17;17979:6;17935:71;:::i;:::-;18016:72;18084:2;18073:9;18069:18;18060:6;18016:72;:::i;:::-;18098;18166:2;18155:9;18151:18;18142:6;18098:72;:::i;:::-;17735:442;;;;;;:::o;18183:180::-;18231:77;18228:1;18221:88;18328:4;18325:1;18318:15;18352:4;18349:1;18342:15;18369:348;18409:7;18432:20;18450:1;18432:20;:::i;:::-;18427:25;;18466:20;18484:1;18466:20;:::i;:::-;18461:25;;18654:1;18586:66;18582:74;18579:1;18576:81;18571:1;18564:9;18557:17;18553:105;18550:131;;;18661:18;;:::i;:::-;18550:131;18709:1;18706;18702:9;18691:20;;18369:348;;;;:::o;18723:191::-;18763:4;18783:20;18801:1;18783:20;:::i;:::-;18778:25;;18817:20;18835:1;18817:20;:::i;:::-;18812:25;;18856:1;18853;18850:8;18847:34;;;18861:18;;:::i;:::-;18847:34;18906:1;18903;18899:9;18891:17;;18723:191;;;;:::o;18920:305::-;18960:3;18979:20;18997:1;18979:20;:::i;:::-;18974:25;;19013:20;19031:1;19013:20;:::i;:::-;19008:25;;19167:1;19099:66;19095:74;19092:1;19089:81;19086:107;;;19173:18;;:::i;:::-;19086:107;19217:1;19214;19210:9;19203:16;;18920:305;;;;:::o",
  "source": "pragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Wallet.sol\";\n\ncontract Dex is Wallet {\n    using SafeMath for uint256;\n\n    enum buysell {\n        BUY,\n        SELL\n    }\n\n    struct order {\n        uint Id;\n        address Trader;\n        buysell OrderSide;\n        bytes32 Ticker;\n        uint Amount;\n        uint Price;\n    }\n\n    mapping(bytes32 => mapping(buysell => order[])) public OrderBook; \n\n    function getOrderBook(bytes32 ticker, buysell orderSide) view public returns(order[] memory){\n        return OrderBook[ticker][orderSide];\n    }\n\n    function createLimitOrder(buysell orderSide, bytes32 ticker, uint amount, uint price) public returns(bool success){\n        if (orderSide == buysell.BUY){\n            require(balances[msg.sender][\"ETH\"] >= amount.mul(price), \"Insufficient balance\");\n        }\n        return true;\n    }\n}",
  "sourcePath": "/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Dex.sol",
  "ast": {
    "absolutePath": "/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Dex.sol",
    "exportedSymbols": {
      "Dex": [
        92
      ],
      "IERC20": [
        934
      ],
      "SafeMath": [
        1293
      ],
      "Wallet": [
        310
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Wallet.sol",
        "file": "./Wallet.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 311,
        "src": "59:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Wallet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 310,
              "src": "99:6:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "99:6:0"
          }
        ],
        "canonicalName": "Dex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          310
        ],
        "name": "Dex",
        "nameLocation": "92:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "id": 6,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1293,
              "src": "118:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "112:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "131:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Dex.buysell",
            "id": 11,
            "members": [
              {
                "id": 9,
                "name": "BUY",
                "nameLocation": "168:3:0",
                "nodeType": "EnumValue",
                "src": "168:3:0"
              },
              {
                "id": 10,
                "name": "SELL",
                "nameLocation": "181:4:0",
                "nodeType": "EnumValue",
                "src": "181:4:0"
              }
            ],
            "name": "buysell",
            "nameLocation": "150:7:0",
            "nodeType": "EnumDefinition",
            "src": "145:46:0"
          },
          {
            "canonicalName": "Dex.order",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "Id",
                "nameLocation": "225:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "220:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "Trader",
                "nameLocation": "245:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "237:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "237:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "OrderSide",
                "nameLocation": "269:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "261:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_buysell_$11",
                  "typeString": "enum Dex.buysell"
                },
                "typeName": {
                  "id": 17,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 16,
                    "name": "buysell",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11,
                    "src": "261:7:0"
                  },
                  "referencedDeclaration": 11,
                  "src": "261:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "Ticker",
                "nameLocation": "296:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "288:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "288:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "Amount",
                "nameLocation": "317:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "312:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "312:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "Price",
                "nameLocation": "338:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "333:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "order",
            "nameLocation": "204:5:0",
            "nodeType": "StructDefinition",
            "scope": 92,
            "src": "197:153:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9233a497",
            "id": 34,
            "mutability": "mutable",
            "name": "OrderBook",
            "nameLocation": "411:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "356:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(enum Dex.buysell => struct Dex.order[]))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 26,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "356:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(enum Dex.buysell => struct Dex.order[]))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 28,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 27,
                    "name": "buysell",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11,
                    "src": "383:7:0"
                  },
                  "referencedDeclaration": 11,
                  "src": "383:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  }
                },
                "nodeType": "Mapping",
                "src": "375:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$",
                  "typeString": "mapping(enum Dex.buysell => struct Dex.order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 30,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29,
                      "name": "order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "394:5:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "394:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_order_$25_storage_ptr",
                      "typeString": "struct Dex.order"
                    }
                  },
                  "id": 31,
                  "nodeType": "ArrayTypeName",
                  "src": "394:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_order_$25_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "520:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 46,
                        "name": "OrderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "537:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(enum Dex.buysell => struct Dex.order storage ref[] storage ref))"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "547:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "537:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$",
                        "typeString": "mapping(enum Dex.buysell => struct Dex.order storage ref[] storage ref)"
                      }
                    },
                    "id": 50,
                    "indexExpression": {
                      "id": 49,
                      "name": "orderSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "555:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_buysell_$11",
                        "typeString": "enum Dex.buysell"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "537:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_order_$25_storage_$dyn_storage",
                      "typeString": "struct Dex.order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 45,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "530:35:0"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nameLocation": "437:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "458:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "450:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "orderSide",
                  "nameLocation": "474:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "466:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  },
                  "typeName": {
                    "id": 38,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37,
                      "name": "buysell",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "466:7:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "466:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_buysell_$11",
                      "typeString": "enum Dex.buysell"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "449:35:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "505:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_order_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41,
                        "name": "order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "505:5:0"
                      },
                      "referencedDeclaration": 25,
                      "src": "505:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_order_$25_storage_ptr",
                        "typeString": "struct Dex.order"
                      }
                    },
                    "id": 43,
                    "nodeType": "ArrayTypeName",
                    "src": "505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_order_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:16:0"
            },
            "scope": 92,
            "src": "428:144:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "692:172:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_buysell_$11",
                      "typeString": "enum Dex.buysell"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67,
                      "name": "orderSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "706:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_buysell_$11",
                        "typeString": "enum Dex.buysell"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 68,
                        "name": "buysell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "719:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_buysell_$11_$",
                          "typeString": "type(enum Dex.buysell)"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "719:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_buysell_$11",
                        "typeString": "enum Dex.buysell"
                      }
                    },
                    "src": "706:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87,
                  "nodeType": "IfStatement",
                  "src": "702:135:0",
                  "trueBody": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "731:106:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 72,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 190,
                                    "src": "753:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 75,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 73,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "762:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 74,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "762:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "753:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 77,
                                "indexExpression": {
                                  "hexValue": "455448",
                                  "id": 76,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "774:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                    "typeString": "literal_string \"ETH\""
                                  },
                                  "value": "ETH"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "753:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 80,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "795:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 78,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "784:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1187,
                                  "src": "784:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "784:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "753:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742062616c616e6365",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "803:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              },
                              "value": "Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              }
                            ],
                            "id": 71,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "745:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:81:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "745:81:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "853:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 66,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "846:11:0"
                }
              ]
            },
            "functionSelector": "6f3b62f9",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLimitOrder",
            "nameLocation": "587:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "orderSide",
                  "nameLocation": "612:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "604:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  },
                  "typeName": {
                    "id": 55,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54,
                      "name": "buysell",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "604:7:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "604:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_buysell_$11",
                      "typeString": "enum Dex.buysell"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "631:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "623:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "644:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "639:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "657:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "652:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "603:60:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "684:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "679:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:14:0"
            },
            "scope": 92,
            "src": "578:286:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "83:783:0",
        "usedErrors": []
      }
    ],
    "src": "0:866:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Dex.sol",
    "exportedSymbols": {
      "Dex": [
        92
      ],
      "IERC20": [
        934
      ],
      "SafeMath": [
        1293
      ],
      "Wallet": [
        310
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "/Users/adilanees/Documents/Blockchain/Truffle/MyDEX/contracts/Wallet.sol",
        "file": "./Wallet.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 311,
        "src": "59:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Wallet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 310,
              "src": "99:6:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "99:6:0"
          }
        ],
        "canonicalName": "Dex",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          310
        ],
        "name": "Dex",
        "nameLocation": "92:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "id": 6,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1293,
              "src": "118:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "112:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "131:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Dex.buysell",
            "id": 11,
            "members": [
              {
                "id": 9,
                "name": "BUY",
                "nameLocation": "168:3:0",
                "nodeType": "EnumValue",
                "src": "168:3:0"
              },
              {
                "id": 10,
                "name": "SELL",
                "nameLocation": "181:4:0",
                "nodeType": "EnumValue",
                "src": "181:4:0"
              }
            ],
            "name": "buysell",
            "nameLocation": "150:7:0",
            "nodeType": "EnumDefinition",
            "src": "145:46:0"
          },
          {
            "canonicalName": "Dex.order",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "Id",
                "nameLocation": "225:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "220:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "Trader",
                "nameLocation": "245:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "237:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "237:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "OrderSide",
                "nameLocation": "269:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "261:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_buysell_$11",
                  "typeString": "enum Dex.buysell"
                },
                "typeName": {
                  "id": 17,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 16,
                    "name": "buysell",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11,
                    "src": "261:7:0"
                  },
                  "referencedDeclaration": 11,
                  "src": "261:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "Ticker",
                "nameLocation": "296:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "288:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 19,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "288:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "Amount",
                "nameLocation": "317:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "312:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "312:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "Price",
                "nameLocation": "338:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "333:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "order",
            "nameLocation": "204:5:0",
            "nodeType": "StructDefinition",
            "scope": 92,
            "src": "197:153:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9233a497",
            "id": 34,
            "mutability": "mutable",
            "name": "OrderBook",
            "nameLocation": "411:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "356:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(enum Dex.buysell => struct Dex.order[]))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 26,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "356:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(enum Dex.buysell => struct Dex.order[]))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 28,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 27,
                    "name": "buysell",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11,
                    "src": "383:7:0"
                  },
                  "referencedDeclaration": 11,
                  "src": "383:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  }
                },
                "nodeType": "Mapping",
                "src": "375:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$",
                  "typeString": "mapping(enum Dex.buysell => struct Dex.order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 30,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29,
                      "name": "order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "394:5:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "394:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_order_$25_storage_ptr",
                      "typeString": "struct Dex.order"
                    }
                  },
                  "id": 31,
                  "nodeType": "ArrayTypeName",
                  "src": "394:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_order_$25_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "520:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 46,
                        "name": "OrderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "537:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(enum Dex.buysell => struct Dex.order storage ref[] storage ref))"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "547:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "537:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_buysell_$11_$_t_array$_t_struct$_order_$25_storage_$dyn_storage_$",
                        "typeString": "mapping(enum Dex.buysell => struct Dex.order storage ref[] storage ref)"
                      }
                    },
                    "id": 50,
                    "indexExpression": {
                      "id": 49,
                      "name": "orderSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "555:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_buysell_$11",
                        "typeString": "enum Dex.buysell"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "537:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_order_$25_storage_$dyn_storage",
                      "typeString": "struct Dex.order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 45,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "530:35:0"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nameLocation": "437:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "458:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "450:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "orderSide",
                  "nameLocation": "474:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "466:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  },
                  "typeName": {
                    "id": 38,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37,
                      "name": "buysell",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "466:7:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "466:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_buysell_$11",
                      "typeString": "enum Dex.buysell"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "449:35:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "505:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_order_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41,
                        "name": "order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "505:5:0"
                      },
                      "referencedDeclaration": 25,
                      "src": "505:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_order_$25_storage_ptr",
                        "typeString": "struct Dex.order"
                      }
                    },
                    "id": 43,
                    "nodeType": "ArrayTypeName",
                    "src": "505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_order_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:16:0"
            },
            "scope": 92,
            "src": "428:144:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "692:172:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_buysell_$11",
                      "typeString": "enum Dex.buysell"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67,
                      "name": "orderSide",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "706:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_buysell_$11",
                        "typeString": "enum Dex.buysell"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 68,
                        "name": "buysell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "719:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_buysell_$11_$",
                          "typeString": "type(enum Dex.buysell)"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "719:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_buysell_$11",
                        "typeString": "enum Dex.buysell"
                      }
                    },
                    "src": "706:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87,
                  "nodeType": "IfStatement",
                  "src": "702:135:0",
                  "trueBody": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "731:106:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 72,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 190,
                                    "src": "753:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 75,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 73,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "762:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 74,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "762:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "753:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 77,
                                "indexExpression": {
                                  "hexValue": "455448",
                                  "id": 76,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "774:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                    "typeString": "literal_string \"ETH\""
                                  },
                                  "value": "ETH"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "753:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 80,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "795:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 78,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "784:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1187,
                                  "src": "784:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "784:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "753:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742062616c616e6365",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "803:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              },
                              "value": "Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                "typeString": "literal_string \"Insufficient balance\""
                              }
                            ],
                            "id": 71,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "745:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:81:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "745:81:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "853:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 66,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "846:11:0"
                }
              ]
            },
            "functionSelector": "6f3b62f9",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLimitOrder",
            "nameLocation": "587:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "orderSide",
                  "nameLocation": "612:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "604:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_buysell_$11",
                    "typeString": "enum Dex.buysell"
                  },
                  "typeName": {
                    "id": 55,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54,
                      "name": "buysell",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11,
                      "src": "604:7:0"
                    },
                    "referencedDeclaration": 11,
                    "src": "604:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_buysell_$11",
                      "typeString": "enum Dex.buysell"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "631:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "623:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "644:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "639:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "657:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "652:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "603:60:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "684:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "679:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:14:0"
            },
            "scope": 92,
            "src": "578:286:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "83:783:0",
        "usedErrors": []
      }
    ],
    "src": "0:866:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x06AC1c12AB78a77506F73C1e9502e0D661f50E93",
      "transactionHash": "0xd91e4115ac0b5f91b17f9b7b360019a33dd5b3cb7e8a31a8313aa14c377a2955"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-10-05T21:52:40.134Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}